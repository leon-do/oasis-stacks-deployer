require("dotenv").config();
const { ethers } = require("ethers");
// prettier-ignore
const abi = [ { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "approved", "type": "address" }, { "indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256" } ], "name": "Approval", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "operator", "type": "address" }, { "indexed": false, "internalType": "bool", "name": "approved", "type": "bool" } ], "name": "ApprovalForAll", "type": "event" }, { "inputs": [ { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" } ], "name": "approve", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [ { "internalType": "uint256", "name": "_tokenIdA", "type": "uint256" }, { "internalType": "uint256", "name": "_tokenIdB", "type": "uint256" }, { "internalType": "string", "name": "_tokenURI", "type": "string" } ], "name": "mixColor", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [ { "internalType": "uint256", "name": "_tokenId", "type": "uint256" }, { "internalType": "string", "name": "_tokenURI", "type": "string" } ], "name": "ownerMint", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [ { "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" } ], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [ { "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "bytes", "name": "_data", "type": "bytes" } ], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [ { "internalType": "address", "name": "operator", "type": "address" }, { "internalType": "bool", "name": "approved", "type": "bool" } ], "name": "setApprovalForAll", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "anonymous": false, "inputs": [ { "indexed": true, "internalType": "address", "name": "from", "type": "address" }, { "indexed": true, "internalType": "address", "name": "to", "type": "address" }, { "indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256" } ], "name": "Transfer", "type": "event" }, { "inputs": [ { "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" } ], "name": "transferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [ { "internalType": "address", "name": "owner", "type": "address" } ], "name": "balanceOf", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [ { "internalType": "uint256", "name": "tokenId", "type": "uint256" } ], "name": "getApproved", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "stateMutability": "view", "type": "function" }, { "inputs": [ { "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "address", "name": "operator", "type": "address" } ], "name": "isApprovedForAll", "outputs": [ { "internalType": "bool", "name": "", "type": "bool" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "name", "outputs": [ { "internalType": "string", "name": "", "type": "string" } ], "stateMutability": "view", "type": "function" }, { "inputs": [ { "internalType": "uint256", "name": "tokenId", "type": "uint256" } ], "name": "ownerOf", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "stateMutability": "view", "type": "function" }, { "inputs": [ { "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" } ], "name": "supportsInterface", "outputs": [ { "internalType": "bool", "name": "", "type": "bool" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "symbol", "outputs": [ { "internalType": "string", "name": "", "type": "string" } ], "stateMutability": "view", "type": "function" }, { "inputs": [ { "internalType": "uint256", "name": "tokenId", "type": "uint256" } ], "name": "tokenURI", "outputs": [ { "internalType": "string", "name": "", "type": "string" } ], "stateMutability": "view", "type": "function" } ] 

main();
async function main() {
  const colors = [15871728, 7568050, 4569411, 11405820, 3360049, 16138689, 136997, 4120913, 11713506, 3630703, 4933811, 10076521, 4682532, 14276975, 11188703, 13548226, 10560208, 6185744, 15110461, 13069540, 5951360, 3606005, 5455418, 3615956, 16085792, 6891072, 2622815, 2786648, 15987782, 15805679, 4584786, 6755357, 7993420, 3103294, 16110926, 8880212, 10754187, 4394690, 13232441, 2358177, 2326725, 2340918, 1419388, 13933594, 5880400, 14773509, 3018072, 11686040, 5792667, 11480749, 15215219, 3269142, 7174422, 14048782, 3558346, 5584033, 439842, 5471193, 6004717, 12764574, 10956759, 11604872, 15412043, 3360502, 3033330, 9731527, 2179295, 12045939, 7651001, 14423041, 12559293, 1830908, 9376175, 7025247, 5776135, 101028, 1725974, 11520066, 16041247, 11486509, 14749352, 3953596, 13876629, 7445714, 11272037, 3435077, 2960009, 9203116, 13505402, 435716, 3266341, 3905439, 4769440, 7259741, 329864, 3985302, 11408032, 8331341, 7647232, 1079598];

  const provider = new ethers.providers.JsonRpcProvider("https://testnet.emerald.oasis.dev");
  const wallet = new ethers.Wallet(process.env.PRIVATE_KEY, provider);

  const erc721 = new ethers.Contract("0x91644644403a5a13C5198D8DaD89247902D2216E", abi, wallet);

  for (let i = colors.indexOf(14423041) + 1; i < colors.length; i++) {
    await erc721["ownerMint"](colors[i], `https://raw.githubusercontent.com/oasis-stack/stack/main/json/${colors[i]}.json`)
    console.log(colors[i]);
    // wait 5 seconds
    await new Promise(resolve => setTimeout(resolve, 15000));
  }
}
